{"ast":null,"code":"var _jsxFileName = \"/home/drigger/Documents/Project/alumniESD/ESD-Fullstack-Integration-master (1)/frontend/src/components/LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n/*\n  This component renders the Login Form with all its functionalities\n  startLogin is the method that uses the axios service to submit login credentials to the backend\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = _ref => {\n  _s();\n  let {\n    startLogin\n  } = _ref;\n  // States for tracking form input which are the email address and password\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  // onSubmit event handler of this form\n  const handleLogin = event => {\n    // Preventing default submission of the form to the action attribute URL\n    event.preventDefault();\n    const credentials = {\n      email,\n      password\n    };\n\n    // Calling startLogin with the provided credentials that will make a call to the backend\n    startLogin(credentials);\n\n    // Reset the form state, i.e. the text that's on the username and password text boxes to empty strings\n    setEmail('');\n    setPassword('');\n  };\n\n  // Typically keep id attributes on your HTML elements so that they can be styled using CSS\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleLogin,\n    id: \"login-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\"\n      // Note that the text that's displayed on the textbox (value attribute) is controlled by the email state\n      ,\n      value: email,\n      onChange: event => setEmail(event.target.value),\n      id: \"email\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: event => setPassword(event.target.value),\n      id: \"password\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      id: \"login-submit\",\n      children: \"LOGIN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"1izRetfmi3BgTTF2cTPwF6ipgqU=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","LoginForm","startLogin","email","setEmail","password","setPassword","handleLogin","event","preventDefault","credentials","target","value"],"sources":["/home/drigger/Documents/Project/alumniESD/ESD-Fullstack-Integration-master (1)/frontend/src/components/LoginForm.js"],"sourcesContent":["import React, { useState } from 'react'\n\n/*\n  This component renders the Login Form with all its functionalities\n  startLogin is the method that uses the axios service to submit login credentials to the backend\n*/\nconst LoginForm = ({ startLogin }) => {\n  // States for tracking form input which are the email address and password\n  const [ email, setEmail ] = useState('')\n  const [ password, setPassword ] = useState('')\n\n  // onSubmit event handler of this form\n  const handleLogin = (event) => {\n    // Preventing default submission of the form to the action attribute URL\n    event.preventDefault()\n\n    const credentials = {\n      email, password\n    }\n\n    // Calling startLogin with the provided credentials that will make a call to the backend\n    startLogin(credentials)\n\n    // Reset the form state, i.e. the text that's on the username and password text boxes to empty strings\n    setEmail('')\n    setPassword('')\n  }\n\n  // Typically keep id attributes on your HTML elements so that they can be styled using CSS\n  return (\n    <form onSubmit={handleLogin} id='login-form'>\n      <input \n        type='email'\n        placeholder='Email'\n        // Note that the text that's displayed on the textbox (value attribute) is controlled by the email state\n        value={email}\n\n        onChange={event => setEmail(event.target.value)}\n        id='email'\n        required\n      />\n        \n      {/* Same as the above username input, except this one has the type password */}\n      <input\n        type='password'\n        placeholder='Password'\n        value={password}\n        onChange={event => setPassword(event.target.value)}\n        id='password'\n        required\n      />\n\n      {/* Submit button for the form */}\n      <button type='submit' id='login-submit'>LOGIN</button>\n    </form>\n  )\n\n}\n\nexport default LoginForm"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AACA;AACA;AACA;AAHA;AAIA,MAAMC,SAAS,GAAG,QAAoB;EAAA;EAAA,IAAnB;IAAEC;EAAW,CAAC;EAC/B;EACA,MAAM,CAAEC,KAAK,EAAEC,QAAQ,CAAE,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAEK,QAAQ,EAAEC,WAAW,CAAE,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA,MAAMO,WAAW,GAAIC,KAAK,IAAK;IAC7B;IACAA,KAAK,CAACC,cAAc,EAAE;IAEtB,MAAMC,WAAW,GAAG;MAClBP,KAAK;MAAEE;IACT,CAAC;;IAED;IACAH,UAAU,CAACQ,WAAW,CAAC;;IAEvB;IACAN,QAAQ,CAAC,EAAE,CAAC;IACZE,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC;;EAED;EACA,oBACE;IAAM,QAAQ,EAAEC,WAAY;IAAC,EAAE,EAAC,YAAY;IAAA,wBAC1C;MACE,IAAI,EAAC,OAAO;MACZ,WAAW,EAAC;MACZ;MAAA;MACA,KAAK,EAAEJ,KAAM;MAEb,QAAQ,EAAEK,KAAK,IAAIJ,QAAQ,CAACI,KAAK,CAACG,MAAM,CAACC,KAAK,CAAE;MAChD,EAAE,EAAC,OAAO;MACV,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QACR,eAGF;MACE,IAAI,EAAC,UAAU;MACf,WAAW,EAAC,UAAU;MACtB,KAAK,EAAEP,QAAS;MAChB,QAAQ,EAAEG,KAAK,IAAIF,WAAW,CAACE,KAAK,CAACG,MAAM,CAACC,KAAK,CAAE;MACnD,EAAE,EAAC,UAAU;MACb,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QACR,eAGF;MAAQ,IAAI,EAAC,QAAQ;MAAC,EAAE,EAAC,cAAc;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAe;EAAA;IAAA;IAAA;IAAA;EAAA,QACjD;AAGX,CAAC;AAAA,GAnDKX,SAAS;AAAA,KAATA,SAAS;AAqDf,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module"}