{"ast":null,"code":"var _jsxFileName = \"/home/drigger/Documents/Project/alumniESD/ESD-Fullstack-Integration-master (1)/frontend/src/components/LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n/*\n  This component renders the Login Form with all its functionalities\n  startLogin is the method that uses the axios service to submit login credentials to the backend\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = _ref => {\n  _s();\n  let {\n    startLogin\n  } = _ref;\n  // States for tracking form input which are the email address and password\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  // onSubmit event handler of this form\n  const handleLogin = event => {\n    // Preventing default submission of the form to the action attribute URL\n    event.preventDefault();\n    const credentials = {\n      email,\n      password\n    };\n\n    // Calling startLogin with the provided credentials that will make a call to the backend\n    startLogin(credentials);\n\n    // Reset the form state, i.e. the text that's on the username and password text boxes to empty strings\n    setEmail('');\n    setPassword('');\n  };\n\n  // Typically keep id attributes on your HTML elements so that they can be styled using CSS\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 offset-md-3 border rounded p-4 mt-2 shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center m-4\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleLogin,\n          id: \"login-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"ID\",\n              className: \"form-label\",\n              children: \"Email iD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              placeholder: \"Email\",\n              value: email,\n              onChange: event => setEmail(event.target.value),\n              id: \"email\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"ID\",\n              className: \"form-label\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Password\",\n              value: password,\n              onChange: event => setPassword(event.target.value),\n              id: \"password\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            id: \"login-submit\",\n            className: \"btn btn-outline-primary\",\n            children: \"LOGIN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"TSZhDBNy8CmbxXgprY/vvMmTG1Q=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","LoginForm","startLogin","email","setEmail","password","setPassword","handleLogin","event","preventDefault","credentials","target","value"],"sources":["/home/drigger/Documents/Project/alumniESD/ESD-Fullstack-Integration-master (1)/frontend/src/components/LoginForm.js"],"sourcesContent":["import React, { useState } from 'react'\n\n/*\n  This component renders the Login Form with all its functionalities\n  startLogin is the method that uses the axios service to submit login credentials to the backend\n*/\nconst LoginForm = ({ startLogin }) => {\n  // States for tracking form input which are the email address and password\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  // onSubmit event handler of this form\n  const handleLogin = (event) => {\n    // Preventing default submission of the form to the action attribute URL\n    event.preventDefault()\n\n    const credentials = {\n      email, password\n    }\n\n    // Calling startLogin with the provided credentials that will make a call to the backend\n    startLogin(credentials)\n\n    // Reset the form state, i.e. the text that's on the username and password text boxes to empty strings\n    setEmail('')\n    setPassword('')\n  }\n\n  // Typically keep id attributes on your HTML elements so that they can be styled using CSS\n  return (\n    <div className='container'>\n      <div className='row'>\n        <div className='col-md-6 offset-md-3 border rounded p-4 mt-2 shadow'>\n          <h2 className='text-center m-4'>Login</h2>\n          \n          <form onSubmit={handleLogin} id='login-form'>\n          <div className='mb-3'>\n          <label htmlFor='ID' className='form-label'>\n                                Email iD\n                            </label>\n            <input\n              type='email'\n              placeholder='Email'\n              value={email}\n\n              onChange={event => setEmail(event.target.value)}\n              id='email'\n              required\n            />\n            </div>\n            <div className='mb-3'>\n            <label htmlFor='ID' className='form-label'>\n                                Password\n                            </label>\n            {/* Same as the above username input, except this one has the type password */}\n            <input\n              type='password'\n              placeholder='Password'\n              value={password}\n              onChange={event => setPassword(event.target.value)}\n              id='password'\n              required\n            />\n            </div>\n            {/* Submit button for the form */}\n            <button type='submit' id='login-submit' className='btn btn-outline-primary'>LOGIN</button>\n          </form>\n        </div>\n      </div>\n    </div>\n\n  )\n\n}\n\nexport default LoginForm"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AACA;AACA;AACA;AAHA;AAIA,MAAMC,SAAS,GAAG,QAAoB;EAAA;EAAA,IAAnB;IAAEC;EAAW,CAAC;EAC/B;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACA,MAAMO,WAAW,GAAIC,KAAK,IAAK;IAC7B;IACAA,KAAK,CAACC,cAAc,EAAE;IAEtB,MAAMC,WAAW,GAAG;MAClBP,KAAK;MAAEE;IACT,CAAC;;IAED;IACAH,UAAU,CAACQ,WAAW,CAAC;;IAEvB;IACAN,QAAQ,CAAC,EAAE,CAAC;IACZE,WAAW,CAAC,EAAE,CAAC;EACjB,CAAC;;EAED;EACA,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,uBACxB;MAAK,SAAS,EAAC,KAAK;MAAA,uBAClB;QAAK,SAAS,EAAC,qDAAqD;QAAA,wBAClE;UAAI,SAAS,EAAC,iBAAiB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAW,eAE1C;UAAM,QAAQ,EAAEC,WAAY;UAAC,EAAE,EAAC,YAAY;UAAA,wBAC5C;YAAK,SAAS,EAAC,MAAM;YAAA,wBACrB;cAAO,OAAO,EAAC,IAAI;cAAC,SAAS,EAAC,YAAY;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAEhB,eACxB;cACE,IAAI,EAAC,OAAO;cACZ,WAAW,EAAC,OAAO;cACnB,KAAK,EAAEJ,KAAM;cAEb,QAAQ,EAAEK,KAAK,IAAIJ,QAAQ,CAACI,KAAK,CAACG,MAAM,CAACC,KAAK,CAAE;cAChD,EAAE,EAAC,OAAO;cACV,QAAQ;YAAA;cAAA;cAAA;cAAA;YAAA,QACR;UAAA;YAAA;YAAA;YAAA;UAAA,QACI,eACN;YAAK,SAAS,EAAC,MAAM;YAAA,wBACrB;cAAO,OAAO,EAAC,IAAI;cAAC,SAAS,EAAC,YAAY;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAElB,eAExB;cACE,IAAI,EAAC,UAAU;cACf,WAAW,EAAC,UAAU;cACtB,KAAK,EAAEP,QAAS;cAChB,QAAQ,EAAEG,KAAK,IAAIF,WAAW,CAACE,KAAK,CAACG,MAAM,CAACC,KAAK,CAAE;cACnD,EAAE,EAAC,UAAU;cACb,QAAQ;YAAA;cAAA;cAAA;cAAA;YAAA,QACR;UAAA;YAAA;YAAA;YAAA;UAAA,QACI,eAEN;YAAQ,IAAI,EAAC,QAAQ;YAAC,EAAE,EAAC,cAAc;YAAC,SAAS,EAAC,yBAAyB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAe;QAAA;UAAA;UAAA;UAAA;QAAA,QACrF;MAAA;QAAA;QAAA;QAAA;MAAA;IACH;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACF;AAIV,CAAC;AAAA,GAnEKX,SAAS;AAAA,KAATA,SAAS;AAqEf,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module"}